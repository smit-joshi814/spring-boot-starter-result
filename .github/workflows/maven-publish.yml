name: Publish and Release

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write   # Needed for creating releases
      packages: write   # Needed for publishing to GitHub Packages

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Create settings.xml
        run: |
          echo "<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${GITHUB_ACTOR}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_PASSWORD }}</password>
              </server>
            </servers>
          </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Import GPG Key
        if: ${{ !contains(env.VERSION, '-SNAPSHOT') }}
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import --quiet
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "batch" >> ~/.gnupg/gpg.conf
          echo "no-tty" >> ~/.gnupg/gpg.conf

      - name: Extract Version from pom.xml
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Publish to GitHub Packages
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Maven Central
        if: ${{ !contains(env.VERSION, '-SNAPSHOT') }}
        run: mvn deploy -P release -s $GITHUB_WORKSPACE/settings.xml -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create GitHub Release
        if: ${{ !contains(env.VERSION, '-SNAPSHOT') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
